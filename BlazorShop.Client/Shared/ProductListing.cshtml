@using BlazorShop.Shared.Models
@using BlazorShop.Shared.Models.Search
@using BlazorShop.Client.Services;
@inject IDataService DataService

<div class="productListingContainer">
    <h3>@GetDisplayValue(ProductCategory)</h3>
    @if (SearchResult == null || !SearchResult.ResultItems.Any())
    {
        <div class="productCard">
            <div class="lds-dual-ring searchInputItem"></div>
        </div>
    }
    else
    {
        @foreach (var item in SearchResult.ResultItems)
        {
            <div class="productCard">
                <div>@item.Title</div>
                <div>@item.HtmlDescription</div>
            </div>
        }
    }
</div>

@functions {
    [Parameter]
    private Category ProductCategory { get; set; } = Category.Apparel | Category.Bicycles | Category.Fashion | Category.Jewelry | Category.Snowdevil;
    [Parameter]
    private SearchResult SearchResult { get; set; }
    [Parameter]
    private int ItemsPerPage { get; set; } = 10;

    protected async override Task OnInitAsync()
    {
        var searchRequest = new SearchRequest
        {
            PageSize = ItemsPerPage,
            Category = ProductCategory

        };
        SearchResult = await DataService.SearchProducts(searchRequest);
    }

    private string GetDisplayValue(Category ProductCategory)
    {
        Category result = (Category)ProductCategory;
        return result.ToString();
    }

}
